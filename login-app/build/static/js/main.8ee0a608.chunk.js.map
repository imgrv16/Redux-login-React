{"version":3,"sources":["Features/userSlices.js","components/LoginPage.js","components/Logout.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","LoginPage","useState","email","setEmail","password","setPassword","dispatch","useDispatch","className","onSubmit","e","preventDefault","loggedIn","handleSubmit","type","placeholder","value","onChange","target","Logout","onClick","handleLogout","App","useSelector","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","useReducer","ReactDOM","render","store","document","getElementById"],"mappings":"iRAEaA,EAAaC,YAAY,CAClCC,KAAO,OACPC,aAAe,CACXC,KAAO,MAEXC,SAAS,CACLC,MAAQ,SAACC,EAAMC,GACXD,EAAMH,KAAOI,EAAOC,SAExBC,OAAS,SAACH,GACNA,EAAMH,KAAO,SAKlB,EAA0BJ,EAAUW,QAA5BL,EAAR,EAAQA,MAAOI,EAAf,EAAeA,OAETE,EAAa,SAACL,GAAD,OAAWA,EAAMH,KAAKA,MAEjCJ,IAAf,Q,gBCeea,EA/BG,WAEd,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,cAWjB,OACI,yBAASC,UAAU,iBAAnB,SACI,uBAAMA,UAAU,cAAcC,SAAa,SAACC,GAAD,OAX9B,SAACA,GAClBA,EAAEC,iBACFL,EAASb,EAAM,CACXS,MAAQA,EACRE,SAAWA,EACXQ,UAAW,KAMuCC,CAAaH,IAA/D,UACI,uCACA,uBAAOI,KAAK,QAAQC,YAAY,QAAQC,MAASd,EAC1Ce,SAAY,SAACP,GAAD,OAAOP,EAASO,EAAEQ,OAAOF,UAE5C,uBAAOF,KAAK,WAAWC,YAAY,WAAWC,MAASZ,EAChDa,SAAY,SAACP,GAAD,OAAOL,EAAYK,EAAEQ,OAAOF,UAE/C,wBAAQF,KAAK,SAASN,UAAU,cAAhC,0BCPDW,G,OAlBA,WAEX,IAAMb,EAAWC,cAQjB,OACI,0BAASC,UAAU,kBAAnB,UACI,0CAAY,0CACZ,wBAAQA,UAAU,iBAAiBY,QAAW,SAACV,GAAD,OAVjC,SAACA,GAClBA,EAAEC,iBACFL,EAAST,EAAO,KAQ0CwB,CAAaX,IAAnE,yBCEGY,MAff,WAEE,IAAM/B,EAAOgC,YAAYxB,GAEzB,OACE,8BAEIR,EAAM,cAAC,EAAD,IAAY,cAAC,EAAD,OCAXiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHCQ,G,OAAAA,YAAe,CAC1BC,QAAU,CACN3C,KAAO4C,MCGfC,IAASC,OAIT,cAAC,IAAD,CAAUC,MAASA,EAAnB,SACE,cAAC,EAAD,MAEAC,SAASC,eAAe,SAG1BhB,M","file":"static/js/main.8ee0a608.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\nexport const userSlice  = createSlice({\n    name : \"user\",\n    initialState : {\n        user : null\n    },\n    reducers:{\n        login : (state,action) => {\n            state.user = action.payload;\n        },\n        logout : (state) => {\n            state.user = null;\n        }\n    }\n})\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n\n","import React,{useState} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../Features/userSlices';\nimport './Login.scss';\n\nconst LoginPage = () => {\n\n    const [email,setEmail] = useState(\"\");\n    const [password,setPassword] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(login({\n            email : email,\n            password : password,\n            loggedIn : true\n        }))\n    }\n\n    return (\n        <section className=\"login__wrapper\">\n            <form className=\"login__form\" onSubmit = { (e) => handleSubmit(e) }>\n                <h1>Login</h1>\n                <input type=\"email\" placeholder=\"Email\" value = {email} \n                       onChange = {(e) => setEmail(e.target.value)}\n                />\n                <input type=\"password\" placeholder=\"Password\" value = {password} \n                       onChange = {(e) => setPassword(e.target.value)}\n                />\n                <button type=\"submit\" className=\"submit__btn\">Submit</button>\n            </form>\n        </section>\n    )\n} \n\nexport default LoginPage;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../Features/userSlices';\nimport './Logout.scss';\n\nconst Logout = () => {\n\n    const dispatch = useDispatch();\n    const handleLogout = (e) => {\n        e.preventDefault();\n        dispatch(logout({\n            \n        }))\n    }\n\n    return (\n        <section className=\"logout__wrapper\">\n            <h1>Welcome <span>GRV</span></h1>\n            <button className=\"logout__button\" onClick = {(e) =>  handleLogout(e)} >Logout</button>\n        </section>\n    )\n}\n\nexport default Logout\n","import './App.css';\nimport LoginPage from './components/LoginPage'\nimport Logout from './components/Logout'\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './Features/userSlices';\nfunction App() {\n\n  const user = useSelector(selectUser);\n\n  return (\n    <div>\n      {\n        user? <Logout/> : <LoginPage/>\n      }\n      {/* <LoginPage /> */}\n      {/* <Logout /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit';\nimport { configure } from '@testing-library/react';\nimport useReducer from '../Features/userSlices';\n\nexport default configureStore({\n    reducer : {\n        user : useReducer\n    },\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from 'react-redux';\nimport store from './app/store';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n<Provider store = {store}>\n  <App />\n</Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}